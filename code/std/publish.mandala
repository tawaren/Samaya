import core.sys.Sys._
import core.Id

module Publish {
    global(inspect) local(consume,create) relevant data Shared[relevant T](val:T)
    type Public[relevant persisted T] = Entry[Shared[T]]

    global function share[relevant persisted T](id:Id.Private, consume val:T):Public[T] = Entry#(id, Shared#(val))
    global function get[relevant persisted T](Public[T](_,v)):T = v.val
    guarded[T] function dispose[relevant persisted T](consume Public[T](_,v)):T = v.val
}
