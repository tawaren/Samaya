import core.Equal
import core.BitOps._
import core.Bool._

module Tuple {
    global primitive data Tuple2[T1,T2](t1:T1, t2:T2)
    global primitive data Tuple3[T1,T2,T3](t1:T1, t2:T2, t3:T3)
    global primitive data Tuple4[T1,T2,T3,T4](t1:T1, t2:T2, t3:T3, t4:T4)
    global primitive data Tuple5[T1,T2,T3,T4,T5](t1:T1, t2:T2, t3:T3, t4:T4, t5:T5)
    global primitive data Tuple6[T1,T2,T3,T4,T5,T6](t1:T1, t2:T2, t3:T3, t4:T4, t5:T5, t6:T6)
    global primitive data Tuple7[T1,T2,T3,T4,T5,T6,T7](t1:T1, t2:T2, t3:T3, t4:T4, t5:T5, t6:T6, t7:T7)
    global primitive data Tuple8[T1,T2,T3,T4,T5,T6,T7,T8](t1:T1, t2:T2, t3:T3, t4:T4, t5:T5, t6:T6, t7:T7, t8:T8)
    global primitive data Tuple9[T1,T2,T3,T4,T5,T6,T7,T8,T9](t1:T1, t2:T2, t3:T3, t4:T4, t5:T5, t6:T6, t7:T7, t8:T8, t9:T9)
    global primitive data Tuple10[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10](t1:T1, t2:T2, t3:T3, t4:T4, t5:T5, t6:T6, t7:T7, t8:T8, t9:T9, t10:T10)
    global primitive data Tuple11[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11](t1:T1, t2:T2, t3:T3, t4:T4, t5:T5, t6:T6, t7:T7, t8:T8, t9:T9, t10:T10, t11:T11)
    global primitive data Tuple12[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12](t1:T1, t2:T2, t3:T3, t4:T4, t5:T5, t6:T6, t7:T7, t8:T8, t9:T9, t10:T10, t11:T11, t12:T12)

    global overloaded function tuple[T1,T2](consume t1:T1, consume t2:T2) = Tuple2#(t1,t2)
    global overloaded function tuple[T1,T2,T3](consume t1:T1, consume t2:T2, consume t3:T3) = Tuple3#(t1,t2,t3)
    global overloaded function tuple[T1,T2,T3,T4](consume t1:T1, consume t2:T2, consume t3:T3, consume t4:T4) = Tuple4#(t1,t2,t3,t4)
    global overloaded function tuple[T1,T2,T3,T4,T5](consume t1:T1, consume t2:T2, consume t3:T3, consume t4:T4, consume t5:T5) = Tuple5#(t1,t2,t3,t4,t5)
    global overloaded function tuple[T1,T2,T3,T4,T5,T6](consume t1:T1, consume t2:T2, consume t3:T3, consume t4:T4, consume t5:T5, consume t6:T6) = Tuple6#(t1,t2,t3,t4,t5,t6)
    global overloaded function tuple[T1,T2,T3,T4,T5,T6,T7](consume t1:T1, consume t2:T2, consume t3:T3, consume t4:T4, consume t5:T5, consume t6:T6, consume t7:T7) = Tuple7#(t1,t2,t3,t4,t5,t6,t7)
    global overloaded function tuple[T1,T2,T3,T4,T5,T6,T7,T8](consume t1:T1, consume t2:T2, consume t3:T3, consume t4:T4, consume t5:T5, consume t6:T6, consume t7:T7, consume t8:T8) = Tuple8#(t1,t2,t3,t4,t5,t6,t7,t8)
    global overloaded function tuple[T1,T2,T3,T4,T5,T6,T7,T8,T9](consume t1:T1, consume t2:T2, consume t3:T3, consume t4:T4, consume t5:T5, consume t6:T6, consume t7:T7, consume t8:T8, consume t9:T9) = Tuple9#(t1,t2,t3,t4,t5,t6,t7,t8,t9)
    global overloaded function tuple[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10](consume t1:T1, consume t2:T2, consume t3:T3, consume t4:T4, consume t5:T5, consume t6:T6, consume t7:T7, consume t8:T8, consume t9:T9, consume t10:T10) = Tuple10#(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10)
    global overloaded function tuple[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11](consume t1:T1, consume t2:T2, consume t3:T3, consume t4:T4, consume t5:T5, consume t6:T6, consume t7:T7, consume t8:T8, consume t9:T9, consume t10:T10, consume t11:T1) = Tuple11#(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)
    global overloaded function tuple[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12](consume t1:T1, consume t2:T2, consume t3:T3, consume t4:T4, consume t5:T5, consume t6:T6, consume t7:T7, consume t8:T8, consume t9:T9, consume t10:T10, consume t11:T11, consume t12:T12) = Tuple12#(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12)

    global function eq2[T1,T2](op1:Tuple2[T1,T2], op2:Tuple2[T1,T2], implicit consume t1Eq:Equal.eq, implicit consume t2Eq:Equal.eq):Bool {
        inspect op1 with Tuple2(v11,v12) =>
        inspect op2 with Tuple2(v21,v22) =>
        t1Eq(v11,v21) & t2Eq(v12,v22)
    }

    instance EqForTuple2[T1,T2] for Equal[Tuple2[T1,T2]] {
        implement eq with eq2[T1,T2]
    }

    global function eq3[T1,T2,T3](op1:Tuple3[T1,T2,T3], op2:Tuple3[T1,T2,T3], implicit consume t1Eq:Equal.eq, implicit consume t2Eq:Equal.eq, implicit consume t3Eq:Equal.eq):Bool {
        inspect op1 with Tuple3(v11,v12,v13) =>
        inspect op2 with Tuple3(v21,v22,v23) =>
        t1Eq(v11,v21) & t2Eq(v12,v22) & t3Eq(v13,v23)
    }

    instance EqForTuple3[T1,T2,T3] for Equal[Tuple3[T1,T2,T3]] {
        implement eq with eq3[T1,T2,T3]
    }

    global function eq4[T1,T2,T3,T4](op1:Tuple4[T1,T2,T3,T4], op2:Tuple4[T1,T2,T3,T4], implicit consume t1Eq:Equal.eq, implicit consume t2Eq:Equal.eq, implicit consume t3Eq:Equal.eq, implicit consume t4Eq:Equal.eq):Bool {
        inspect op1 with Tuple4(v11,v12,v13,v14) =>
        inspect op2 with Tuple4(v21,v22,v23,v24) =>
        t1Eq(v11,v21) & t2Eq(v12,v22) & t3Eq(v13,v23) &t4Eq(v14,v24)
    }

    instance EqForTuple4[T1,T2,T3,T4] for Equal[Tuple4[T1,T2,T3,T4]] {
        implement eq with eq4[T1,T2,T3,T4]
    }

    global function eq5[T1,T2,T3,T4,T5](op1:Tuple5[T1,T2,T3,T4,T5], op2:Tuple5[T1,T2,T3,T4,T5], implicit consume t1Eq:Equal.eq, implicit consume t2Eq:Equal.eq, implicit consume t3Eq:Equal.eq, implicit consume t4Eq:Equal.eq, implicit consume t5Eq:Equal.eq):Bool {
        inspect op1 with Tuple5(v11,v12,v13,v14,v15) =>
        inspect op2 with Tuple5(v21,v22,v23,v24,v25) =>
        t1Eq(v11,v21) & t2Eq(v12,v22) & t3Eq(v13,v23) &t4Eq(v14,v24) & t5Eq(v15,v25)
    }

    instance EqForTuple5[T1,T2,T3,T4,T5] for Equal[Tuple5[T1,T2,T3,T4,T5]] {
        implement eq with eq5[T1,T2,T3,T4,T5]
    }

    global function eq6[T1,T2,T3,T4,T5,T6](op1:Tuple6[T1,T2,T3,T4,T5,T6], op2:Tuple6[T1,T2,T3,T4,T5,T6], implicit consume t1Eq:Equal.eq, implicit consume t2Eq:Equal.eq, implicit consume t3Eq:Equal.eq, implicit consume t4Eq:Equal.eq, implicit consume t5Eq:Equal.eq, implicit consume t6Eq:Equal.eq):Bool {
        inspect op1 with Tuple6(v11,v12,v13,v14,v15,v16) =>
        inspect op2 with Tuple6(v21,v22,v23,v24,v25,v26) =>
        t1Eq(v11,v21) & t2Eq(v12,v22) & t3Eq(v13,v23) &t4Eq(v14,v24) & t5Eq(v15,v25) & t6Eq(v16,v26)
    }

    instance EqForTuple6[T1,T2,T3,T4,T5,T6] for Equal[Tuple6[T1,T2,T3,T4,T5,T6]] {
        implement eq with eq6[T1,T2,T3,T4,T5,T6]
    }

    global function eq7[T1,T2,T3,T4,T5,T6,T7](op1:Tuple7[T1,T2,T3,T4,T5,T6,T7], op2:Tuple7[T1,T2,T3,T4,T5,T6,T7], implicit consume t1Eq:Equal.eq, implicit consume t2Eq:Equal.eq, implicit consume t3Eq:Equal.eq, implicit consume t4Eq:Equal.eq, implicit consume t5Eq:Equal.eq, implicit consume t6Eq:Equal.eq, implicit consume t7Eq:Equal.eq):Bool {
        inspect op1 with Tuple7(v11,v12,v13,v14,v15,v16,v17) =>
        inspect op2 with Tuple7(v21,v22,v23,v24,v25,v26,v27) =>
        t1Eq(v11,v21) & t2Eq(v12,v22) & t3Eq(v13,v23) &t4Eq(v14,v24) & t5Eq(v15,v25) & t6Eq(v16,v26) & t7Eq(v17,v27)
    }

    instance EqForTuple7[T1,T2,T3,T4,T5,T6,T7] for Equal[Tuple7[T1,T2,T3,T4,T5,T6,T7]] {
        implement eq with eq7[T1,T2,T3,T4,T5,T6,T7]
    }

    global function eq8[T1,T2,T3,T4,T5,T6,T7,T8](op1:Tuple8[T1,T2,T3,T4,T5,T6,T7,T8], op2:Tuple8[T1,T2,T3,T4,T5,T6,T7,T8], implicit consume t1Eq:Equal.eq, implicit consume t2Eq:Equal.eq, implicit consume t3Eq:Equal.eq, implicit consume t4Eq:Equal.eq, implicit consume t5Eq:Equal.eq, implicit consume t6Eq:Equal.eq, implicit consume t7Eq:Equal.eq, implicit consume t8Eq:Equal.eq):Bool {
        inspect op1 with Tuple8(v11,v12,v13,v14,v15,v16,v17,v18) =>
        inspect op2 with Tuple8(v21,v22,v23,v24,v25,v26,v27,v28) =>
        t1Eq(v11,v21) & t2Eq(v12,v22) & t3Eq(v13,v23) &t4Eq(v14,v24) & t5Eq(v15,v25) & t6Eq(v16,v26) & t7Eq(v17,v27) & t8Eq(v18,v28)
    }

    instance EqForTuple8[T1,T2,T3,T4,T5,T6,T7,T8] for Equal[Tuple8[T1,T2,T3,T4,T5,T6,T7,T8]] {
        implement eq with eq8[T1,T2,T3,T4,T5,T6,T7,T8]
    }

    global function eq9[T1,T2,T3,T4,T5,T6,T7,T8,T9](op1:Tuple9[T1,T2,T3,T4,T5,T6,T7,T8,T9], op2:Tuple9[T1,T2,T3,T4,T5,T6,T7,T8,T9], implicit consume t1Eq:Equal.eq, implicit consume t2Eq:Equal.eq, implicit consume t3Eq:Equal.eq, implicit consume t4Eq:Equal.eq, implicit consume t5Eq:Equal.eq, implicit consume t6Eq:Equal.eq, implicit consume t7Eq:Equal.eq, implicit consume t8Eq:Equal.eq, implicit consume t9Eq:Equal.eq):Bool {
        inspect op1 with Tuple9(v11,v12,v13,v14,v15,v16,v17,v18,v19) =>
        inspect op2 with Tuple9(v21,v22,v23,v24,v25,v26,v27,v28,v29) =>
        t1Eq(v11,v21) & t2Eq(v12,v22) & t3Eq(v13,v23) &t4Eq(v14,v24) & t5Eq(v15,v25) & t6Eq(v16,v26) & t7Eq(v17,v27) & t8Eq(v18,v28) & t9Eq(v19,v29)
    }

    instance EqForTuple9[T1,T2,T3,T4,T5,T6,T7,T8,T9] for Equal[Tuple9[T1,T2,T3,T4,T5,T6,T7,T8,T9]] {
        implement eq with eq9[T1,T2,T3,T4,T5,T6,T7,T8,T9]
    }

    global function eq10[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10](op1:Tuple10[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10], op2:Tuple10[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10], implicit consume t1Eq:Equal.eq, implicit consume t2Eq:Equal.eq, implicit consume t3Eq:Equal.eq, implicit consume t4Eq:Equal.eq, implicit consume t5Eq:Equal.eq, implicit consume t6Eq:Equal.eq, implicit consume t7Eq:Equal.eq, implicit consume t8Eq:Equal.eq, implicit consume t9Eq:Equal.eq, implicit consume t10Eq:Equal.eq):Bool {
        inspect op1 with Tuple10(v11,v12,v13,v14,v15,v16,v17,v18,v19,v110) =>
        inspect op2 with Tuple10(v21,v22,v23,v24,v25,v26,v27,v28,v29,v210) =>
        t1Eq(v11,v21) & t2Eq(v12,v22) & t3Eq(v13,v23) &t4Eq(v14,v24) & t5Eq(v15,v25) & t6Eq(v16,v26) & t7Eq(v17,v27) & t8Eq(v18,v28) & t9Eq(v19,v29) & t10Eq(v110,v210)
    }

    instance EqForTuple10[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10] for Equal[Tuple10[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10]] {
        implement eq with eq10[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10]
    }

    global function eq11[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11](op1:Tuple11[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11], op2:Tuple11[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11], implicit consume t1Eq:Equal.eq, implicit consume t2Eq:Equal.eq, implicit consume t3Eq:Equal.eq, implicit consume t4Eq:Equal.eq, implicit consume t5Eq:Equal.eq, implicit consume t6Eq:Equal.eq, implicit consume t7Eq:Equal.eq, implicit consume t8Eq:Equal.eq, implicit consume t9Eq:Equal.eq, implicit consume t10Eq:Equal.eq, implicit consume t11Eq:Equal.eq):Bool {
        inspect op1 with Tuple11(v11,v12,v13,v14,v15,v16,v17,v18,v19,v110,v111) =>
        inspect op2 with Tuple11(v21,v22,v23,v24,v25,v26,v27,v28,v29,v210,v211) =>
        t1Eq(v11,v21) & t2Eq(v12,v22) & t3Eq(v13,v23) &t4Eq(v14,v24) & t5Eq(v15,v25) & t6Eq(v16,v26) & t7Eq(v17,v27) & t8Eq(v18,v28) & t9Eq(v19,v29) & t10Eq(v110,v210) & t11Eq(v111,v211)
    }

    instance EqForTuple11[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11] for Equal[Tuple11[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11]] {
        implement eq with eq11[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11]
    }

    global function eq12[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12](op1:Tuple12[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12], op2:Tuple12[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12], implicit consume t1Eq:Equal.eq, implicit consume t2Eq:Equal.eq, implicit consume t3Eq:Equal.eq, implicit consume t4Eq:Equal.eq, implicit consume t5Eq:Equal.eq, implicit consume t6Eq:Equal.eq, implicit consume t7Eq:Equal.eq, implicit consume t8Eq:Equal.eq, implicit consume t9Eq:Equal.eq, implicit consume t10Eq:Equal.eq, implicit consume t11Eq:Equal.eq, implicit consume t12Eq:Equal.eq):Bool {
        inspect op1 with Tuple12(v11,v12,v13,v14,v15,v16,v17,v18,v19,v110,v111,v112) =>
        inspect op2 with Tuple12(v21,v22,v23,v24,v25,v26,v27,v28,v29,v210,v211,v212) =>
        t1Eq(v11,v21) & t2Eq(v12,v22) & t3Eq(v13,v23) &t4Eq(v14,v24) & t5Eq(v15,v25) & t6Eq(v16,v26) & t7Eq(v17,v27) & t8Eq(v18,v28) & t9Eq(v19,v29) & t10Eq(v110,v210) & t11Eq(v111,v211) & t12Eq(v112,v212)
    }

    instance EqForTuple12[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12] for Equal[Tuple12[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12]] {
        implement eq with eq12[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12]
    }

}