import core.Id
import core.sys.Ids.moduleId
import core.sys.Ids.idFromPrivate
import core.sys.Sys.Context
import core.sys.Sys.Sender
import Subject._
import Option._
import PermAssociation._
import Permission._


module NativeAuthenticator {

    global function subjectFor(senderId:Id.Public):ValidatedSubject {
        validateSubject(moduleId(),senderId)
    }

    global function authenticateWith(Sender(privId)):(auth:AuthorizationCap) {
         authenticate(moduleId(),idFromPrivate(privId))
    }
}

transactional transaction AuthorizationFromSender(implicit context sender:Sender):Authorization = perm(NativeAuthenticator.authenticateWith(sender))
transactional transaction AuthorizationCapFromSender(implicit context sender:Sender):AuthorizationCap = NativeAuthenticator.authenticateWith(sender)
transactional transaction SubjectFromSenderId(senderId:Id.Public):Subject = NativeAuthenticator.subjectFor(senderId).subject
transactional transaction SubjectFromSender(implicit Sender(senderId)):Subject = NativeAuthenticator.subjectFor(<senderId>).subject
